.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "KFAKECHROOT 7"
.TH KFAKECHROOT 7 "12 May 2008" "klik" " "
.SH "NAME"
libkfakechroot.so \- gives a fake chroot environment
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
kfakechroot runs a command in an environment were is additional possibility to
use \fIchroot\fR\|(8) command without root privileges. This is useful for allowing
users to create own chrooted environment with possibility to install another
packages without need for root privileges.
.PP
kfakechroot is a fork of fakechroot (http://fakechroot.alioth.debian.org/) dedicated
to the klik2 project. Klik2 is the current working title of the next generation of
klik (http://klik.atekon.de/) which will focus on application virtualization.
.PP
Klik creates applications that are encapsulated into a single file. This file in fact
is a compressed file system image similar to the \s-1ISO\s0 image format that we know from
burning data CDs. Hence, klik is the implementation of the \*(L"1 application == 1 file\*(R"
principle.
.PP
kfakechroot replaces more library functions (\fIchroot\fR\|(2), \fIopen\fR\|(2), etc.) by ones
that simulate the effect the real library functions would have had, had the
user really been in chroot. These wrapper functions are in a shared library
\&\fI/usr/lib/kfakechroot/libkfakechroot.so\fR which is loaded through the
\&\fB\s-1LD_PRELOAD\s0\fR mechanism of the dynamic loader. (See \fIld.so\fR\|(8))
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Here is an example session with kfakechroot.
.PP
.Vb 4
\& $ export PATH=/usr/local/lib:$PATH
\& $ export FAKECHROOT_EXCLUDE_PATH=/tmp:/proc:/dev:/var/run
\& $ export LD_PRELOAD=/usr/local/lib/kfakechroot/libkfakechroot.so
\& $ /usr/local/bin/kchroot /tmp/klik/mnt
.Ve
.SH "SECURITY ASPECTS"
.IX Header "SECURITY ASPECTS"
kfakechroot is a regular, non-setuid program. It does not enhance a user's
privileges, or decrease the system's security.
.SH "FILES"
.IX Header "FILES"
.IP "\fI/usr/local/lib/kfakechroot/libkfakechroot.so\fR" 4
.IX Item "/usr/local/lib/kfakechroot/libkfakechroot.so"
The shared library containing the wrapper functions.
.IP "\fI/usr/local/bin/kchroot\fR" 4
.IX Item "/usr/local/bin/kchroot"
Run command or interactive shell with special root directory.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.IP "\fB\s-1FAKECHROOT_DEBUG\s0\fR" 4
.IX Item "FAKECHROOT_DEBUG"
Only for debugging purpose.
.IP "\fB\s-1FAKECHROOT_BASE\s0\fR" 4
.IX Item "FAKECHROOT_BASE"
The root directory for fake chroot environment.
.IP "\fB\s-1FAKECHROOT_BASE_ROOT\s0\fR" 4
.IX Item "FAKECHROOT_BASE_ROOT"
Location where all fake chroot environments are located (by default, \fI/tmp/klik\fR).
.IP "\fB\s-1FAKECHROOT_WORKING_DIRECTORY\s0\fR" 4
.IX Item "FAKECHROOT_WORKING_DIRECTORY"
Change the current directory to this value (only when a shell script is called).
.IP "\fB\s-1FAKECHROOT_EXCLUDE_PATH\s0\fR" 4
.IX Item "FAKECHROOT_EXCLUDE_PATH"
List of directories to exclude from the jail, usually \fI/tmp:/proc:/dev:/var/run\fR.
.IP "\fB\s-1FAKECHROOT_SU_ROOT\s0\fR" 4
.IX Item "FAKECHROOT_SU_ROOT"
Change the identity of the current user to root (\fIexperimental\fR).
.IP "\fB\s-1LD_LIBRARY_PATH\s0\fR, \fB\s-1LD_PRELOAD\s0\fR" 4
.IX Item "LD_LIBRARY_PATH, LD_PRELOAD"
Kfakechroot is implemented by wrapping system calls. This is accomplished by
setting LD_LIBRARY_PATH=/usr/lib/kfakechroot and
LD_PRELOAD=libkfakechroot.so. That library is loaded before the
system's C library, and so most of the library functions are intercepted by
it. If you need to set either \fB\s-1LD_LIBRARY_PATH\s0\fR or \fB\s-1LD_PRELOAD\s0\fR from within
a fakechroot environment, it should be set relative to the given paths, as in
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/foo/bar/
.SH "LIMITATIONS"
.IX Header "LIMITATIONS"
.IP "o" 4
\&\fI/lib/ld\-linux.so.2\fR is always loaded from real environment. This path is
hardcoded by linker for all binaries.
.IP "o" 4
Statically linked binaries doesn't work, especially \fIldconfig\fR\|(8), so you have to
wrap this command with dummy version and i.e. set the dpkg diversion, see:
\&\fIdpkg\-divert\fR\|(8).
.IP "o" 4
\&\fIldd\fR\|(1) also doesn't work. You have to use \fIalias ldd='LD_TRACE_LOADED_OBJECTS=1'\fR instead.
.IP "o" 4
The full screen applications hangs up if \fI/dev/tty\fR file is not a real
device. Link \fI/dev/tty\fR file or whole \fI/dev\fR directory to the real one or
remove it from fake chroot environment.
.IP "o" 4
\&\fIlckpwdf()\fR and \fIulckpwdf()\fR are ignored so \fIpasswd\fR\|(1) command should work
.IP "o" 4
Your real uid should exist in \fI/etc/passwd\fR. Create it with adduser \-\-uid
\&\fIrealuid\fR \fIrealuser\fR.
.SH "COPYING"
.IX Header "COPYING"
kfakechroot is distributed under the \s-1GNU\s0 Lesser General Public License (\s-1LGPL\s0
2.1 or greater).
.SH "AUTHORS"
.IX Header "AUTHORS"
.Vb 3
\& (c) 2003\-2007 Piotr Roszatycki <dexter@debian.org>
\& (c) 2007      Mark Eichin <eichin@metacarta.com>
\& (c) 2006\-2008 Lionel Tricon <lionel.tricon@gmail.com>
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIfakeroot\fR\|(1), \fIdpkg\-buildpackage\fR\|(1), \fIdebuild\fR\|(1), \fIdebootstrap\fR\|(8)
